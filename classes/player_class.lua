--player.lua

player = {}

function player:init(world)

  --[[
  TODO:
  -base off of json file
  -sprites
  -improve air control (conditional linear damping?)
  -attacks
  -jump limit (based on config file)
  -speed (fconfig)
  ]]


  self.jumpcounter = 2
  self.phys = {}
  self.phys.body = love.physics.newBody(world, 200, 550, "dynamic")
  self.phys.body:setFixedRotation(true)
  self.phys.shape = love.physics.newRectangleShape(0, 0, 50, 100)
  self.phys.fixture = love.physics.newFixture(self.phys.body, self.phys.shape, 5) -- A higher density gives it more mass.
  self.phys.fixture:setFriction(.5)
end

function player:update(dt)
  if #self.phys.body:getContacts() == 0 then --better control in air
    self.phys.body:setLinearDamping(1)
  else
    self.phys.body:setLinearDamping(0)
  end

  if love.keyboard.isDown("right") then --press the right arrow key to push the player to the right
    self.phys.body:applyForce(4000, 0)
  elseif love.keyboard.isDown("left") then --press the left arrow key to push the player to the left
    self.phys.body:applyForce(-4000, 0)
  elseif love.keyboard.isDown("space") then --press the up arrow key to set the player in the air
    self.phys.body:setPosition(650/2, 650/2)
    self.phys.body:setLinearVelocity(0, 0) --we must set the velocity to zero to prevent a potentially large velocity generated by the change in position
  end
  xv,yv = self.phys.body:getLinearVelocity()
  function love.keypressed(key)
     if key == "escape" then
       love.event.quit()
     end
     if key == "up" then
       --self.phys.body:applyForce(0, -600000)
       self.phys.body:setLinearVelocity(xv, -800)
     end
  end
end

function player:draw()
  love.graphics.setColor(0.76, 0.18, 0.05) --set the drawing color to red for the player
  love.graphics.polygon("fill", self.phys.body:getWorldPoints(self.phys.shape:getPoints()))
end

return player
